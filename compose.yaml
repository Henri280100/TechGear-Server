# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
  postgres-db:
    image: postgres
    container_name: postgres-db
    restart: always
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    # ports:
    #   - 5433:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  spring-app:
    image: docker-spring-boot-postgres:latest
    container_name: spring-app
    build:
      context: .
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:$POSTGRESDB_DOCKER_PORT/$POSTGRESDB_DATABASE
      SPRING_DATASOURCE_USERNAME: $POSTGRESDB_USER
      SPRING_DATASOURCE_PASSWORD: $POSTGRESDB_ROOT_PASSWORD
      SPRING.JPA.PROPERTIES.HIBERNATE.DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - 8082:8082
    depends_on:
      - postgres-db

volumes:
  postgres-data:

networks:
  app-network: 

