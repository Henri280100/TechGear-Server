/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.v01.techgear_server.generated;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Email schema is a collection of user email address */
@org.apache.avro.specific.AvroGenerated
public class EmailSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5633570157581511211L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmailSchema\",\"namespace\":\"com.v01.techgear_server.generated\",\"doc\":\"Email schema is a collection of user email address\",\"fields\":[{\"name\":\"emailId\",\"type\":\"long\"},{\"name\":\"emailAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"verificationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"verified\",\"type\":\"boolean\"},{\"name\":\"sentAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"verifiedAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"recipient\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"msgBody\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"subject\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"attachment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"user\",\"type\":{\"type\":\"record\",\"name\":\"UserSchema\",\"doc\":\"User schema is a collection of user information.\",\"fields\":[{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"userName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"password\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"phoneNumbers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"addresses\",\"type\":{\"type\":\"record\",\"name\":\"UserAddressSchema\",\"fields\":[{\"name\":\"addressId\",\"type\":\"long\"},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"addressDetails\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"passwordHistory\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"reviews\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"roles\",\"type\":{\"type\":\"record\",\"name\":\"RolesSchema\",\"doc\":\"User roles schema is a collection of user roles.\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"roleType\",\"type\":{\"type\":\"enum\",\"name\":\"Roles\",\"symbols\":[\"USER\",\"ADMIN\"]}}]}},{\"name\":\"emails\",\"type\":\"EmailSchema\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EmailSchema> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EmailSchema> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EmailSchema> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EmailSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EmailSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EmailSchema to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EmailSchema from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EmailSchema instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EmailSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long emailId;
  private java.lang.String emailAddress;
  private java.lang.String verificationToken;
  private boolean verified;
  private java.lang.String sentAt;
  private java.lang.String verifiedAt;
  private java.lang.String recipient;
  private java.lang.String msgBody;
  private java.lang.String subject;
  private java.lang.String attachment;
  private com.v01.techgear_server.generated.UserSchema user;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EmailSchema() {}

  /**
   * All-args constructor.
   * @param emailId The new value for emailId
   * @param emailAddress The new value for emailAddress
   * @param verificationToken The new value for verificationToken
   * @param verified The new value for verified
   * @param sentAt The new value for sentAt
   * @param verifiedAt The new value for verifiedAt
   * @param recipient The new value for recipient
   * @param msgBody The new value for msgBody
   * @param subject The new value for subject
   * @param attachment The new value for attachment
   * @param user The new value for user
   */
  public EmailSchema(java.lang.Long emailId, java.lang.String emailAddress, java.lang.String verificationToken, java.lang.Boolean verified, java.lang.String sentAt, java.lang.String verifiedAt, java.lang.String recipient, java.lang.String msgBody, java.lang.String subject, java.lang.String attachment, com.v01.techgear_server.generated.UserSchema user) {
    this.emailId = emailId;
    this.emailAddress = emailAddress;
    this.verificationToken = verificationToken;
    this.verified = verified;
    this.sentAt = sentAt;
    this.verifiedAt = verifiedAt;
    this.recipient = recipient;
    this.msgBody = msgBody;
    this.subject = subject;
    this.attachment = attachment;
    this.user = user;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return emailId;
    case 1: return emailAddress;
    case 2: return verificationToken;
    case 3: return verified;
    case 4: return sentAt;
    case 5: return verifiedAt;
    case 6: return recipient;
    case 7: return msgBody;
    case 8: return subject;
    case 9: return attachment;
    case 10: return user;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: emailId = (java.lang.Long)value$; break;
    case 1: emailAddress = value$ != null ? value$.toString() : null; break;
    case 2: verificationToken = value$ != null ? value$.toString() : null; break;
    case 3: verified = (java.lang.Boolean)value$; break;
    case 4: sentAt = value$ != null ? value$.toString() : null; break;
    case 5: verifiedAt = value$ != null ? value$.toString() : null; break;
    case 6: recipient = value$ != null ? value$.toString() : null; break;
    case 7: msgBody = value$ != null ? value$.toString() : null; break;
    case 8: subject = value$ != null ? value$.toString() : null; break;
    case 9: attachment = value$ != null ? value$.toString() : null; break;
    case 10: user = (com.v01.techgear_server.generated.UserSchema)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'emailId' field.
   * @return The value of the 'emailId' field.
   */
  public long getEmailId() {
    return emailId;
  }


  /**
   * Sets the value of the 'emailId' field.
   * @param value the value to set.
   */
  public void setEmailId(long value) {
    this.emailId = value;
  }

  /**
   * Gets the value of the 'emailAddress' field.
   * @return The value of the 'emailAddress' field.
   */
  public java.lang.String getEmailAddress() {
    return emailAddress;
  }


  /**
   * Sets the value of the 'emailAddress' field.
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.String value) {
    this.emailAddress = value;
  }

  /**
   * Gets the value of the 'verificationToken' field.
   * @return The value of the 'verificationToken' field.
   */
  public java.lang.String getVerificationToken() {
    return verificationToken;
  }


  /**
   * Sets the value of the 'verificationToken' field.
   * @param value the value to set.
   */
  public void setVerificationToken(java.lang.String value) {
    this.verificationToken = value;
  }

  /**
   * Gets the value of the 'verified' field.
   * @return The value of the 'verified' field.
   */
  public boolean getVerified() {
    return verified;
  }


  /**
   * Sets the value of the 'verified' field.
   * @param value the value to set.
   */
  public void setVerified(boolean value) {
    this.verified = value;
  }

  /**
   * Gets the value of the 'sentAt' field.
   * @return The value of the 'sentAt' field.
   */
  public java.lang.String getSentAt() {
    return sentAt;
  }


  /**
   * Sets the value of the 'sentAt' field.
   * @param value the value to set.
   */
  public void setSentAt(java.lang.String value) {
    this.sentAt = value;
  }

  /**
   * Gets the value of the 'verifiedAt' field.
   * @return The value of the 'verifiedAt' field.
   */
  public java.lang.String getVerifiedAt() {
    return verifiedAt;
  }


  /**
   * Sets the value of the 'verifiedAt' field.
   * @param value the value to set.
   */
  public void setVerifiedAt(java.lang.String value) {
    this.verifiedAt = value;
  }

  /**
   * Gets the value of the 'recipient' field.
   * @return The value of the 'recipient' field.
   */
  public java.lang.String getRecipient() {
    return recipient;
  }


  /**
   * Sets the value of the 'recipient' field.
   * @param value the value to set.
   */
  public void setRecipient(java.lang.String value) {
    this.recipient = value;
  }

  /**
   * Gets the value of the 'msgBody' field.
   * @return The value of the 'msgBody' field.
   */
  public java.lang.String getMsgBody() {
    return msgBody;
  }


  /**
   * Sets the value of the 'msgBody' field.
   * @param value the value to set.
   */
  public void setMsgBody(java.lang.String value) {
    this.msgBody = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public java.lang.String getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.String value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'attachment' field.
   * @return The value of the 'attachment' field.
   */
  public java.lang.String getAttachment() {
    return attachment;
  }


  /**
   * Sets the value of the 'attachment' field.
   * @param value the value to set.
   */
  public void setAttachment(java.lang.String value) {
    this.attachment = value;
  }

  /**
   * Gets the value of the 'user' field.
   * @return The value of the 'user' field.
   */
  public com.v01.techgear_server.generated.UserSchema getUser() {
    return user;
  }


  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(com.v01.techgear_server.generated.UserSchema value) {
    this.user = value;
  }

  /**
   * Creates a new EmailSchema RecordBuilder.
   * @return A new EmailSchema RecordBuilder
   */
  public static com.v01.techgear_server.generated.EmailSchema.Builder newBuilder() {
    return new com.v01.techgear_server.generated.EmailSchema.Builder();
  }

  /**
   * Creates a new EmailSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EmailSchema RecordBuilder
   */
  public static com.v01.techgear_server.generated.EmailSchema.Builder newBuilder(com.v01.techgear_server.generated.EmailSchema.Builder other) {
    if (other == null) {
      return new com.v01.techgear_server.generated.EmailSchema.Builder();
    } else {
      return new com.v01.techgear_server.generated.EmailSchema.Builder(other);
    }
  }

  /**
   * Creates a new EmailSchema RecordBuilder by copying an existing EmailSchema instance.
   * @param other The existing instance to copy.
   * @return A new EmailSchema RecordBuilder
   */
  public static com.v01.techgear_server.generated.EmailSchema.Builder newBuilder(com.v01.techgear_server.generated.EmailSchema other) {
    if (other == null) {
      return new com.v01.techgear_server.generated.EmailSchema.Builder();
    } else {
      return new com.v01.techgear_server.generated.EmailSchema.Builder(other);
    }
  }

  /**
   * RecordBuilder for EmailSchema instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmailSchema>
    implements org.apache.avro.data.RecordBuilder<EmailSchema> {

    private long emailId;
    private java.lang.String emailAddress;
    private java.lang.String verificationToken;
    private boolean verified;
    private java.lang.String sentAt;
    private java.lang.String verifiedAt;
    private java.lang.String recipient;
    private java.lang.String msgBody;
    private java.lang.String subject;
    private java.lang.String attachment;
    private com.v01.techgear_server.generated.UserSchema user;
    private com.v01.techgear_server.generated.UserSchema.Builder userBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.v01.techgear_server.generated.EmailSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.emailId)) {
        this.emailId = data().deepCopy(fields()[0].schema(), other.emailId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[1].schema(), other.emailAddress);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.verificationToken)) {
        this.verificationToken = data().deepCopy(fields()[2].schema(), other.verificationToken);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.verified)) {
        this.verified = data().deepCopy(fields()[3].schema(), other.verified);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.sentAt)) {
        this.sentAt = data().deepCopy(fields()[4].schema(), other.sentAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.verifiedAt)) {
        this.verifiedAt = data().deepCopy(fields()[5].schema(), other.verifiedAt);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.recipient)) {
        this.recipient = data().deepCopy(fields()[6].schema(), other.recipient);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.msgBody)) {
        this.msgBody = data().deepCopy(fields()[7].schema(), other.msgBody);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.subject)) {
        this.subject = data().deepCopy(fields()[8].schema(), other.subject);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.attachment)) {
        this.attachment = data().deepCopy(fields()[9].schema(), other.attachment);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.user)) {
        this.user = data().deepCopy(fields()[10].schema(), other.user);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasUserBuilder()) {
        this.userBuilder = com.v01.techgear_server.generated.UserSchema.newBuilder(other.getUserBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing EmailSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.v01.techgear_server.generated.EmailSchema other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.emailId)) {
        this.emailId = data().deepCopy(fields()[0].schema(), other.emailId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[1].schema(), other.emailAddress);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.verificationToken)) {
        this.verificationToken = data().deepCopy(fields()[2].schema(), other.verificationToken);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.verified)) {
        this.verified = data().deepCopy(fields()[3].schema(), other.verified);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sentAt)) {
        this.sentAt = data().deepCopy(fields()[4].schema(), other.sentAt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.verifiedAt)) {
        this.verifiedAt = data().deepCopy(fields()[5].schema(), other.verifiedAt);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.recipient)) {
        this.recipient = data().deepCopy(fields()[6].schema(), other.recipient);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.msgBody)) {
        this.msgBody = data().deepCopy(fields()[7].schema(), other.msgBody);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.subject)) {
        this.subject = data().deepCopy(fields()[8].schema(), other.subject);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.attachment)) {
        this.attachment = data().deepCopy(fields()[9].schema(), other.attachment);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user)) {
        this.user = data().deepCopy(fields()[10].schema(), other.user);
        fieldSetFlags()[10] = true;
      }
      this.userBuilder = null;
    }

    /**
      * Gets the value of the 'emailId' field.
      * @return The value.
      */
    public long getEmailId() {
      return emailId;
    }


    /**
      * Sets the value of the 'emailId' field.
      * @param value The value of 'emailId'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setEmailId(long value) {
      validate(fields()[0], value);
      this.emailId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'emailId' field has been set.
      * @return True if the 'emailId' field has been set, false otherwise.
      */
    public boolean hasEmailId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'emailId' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearEmailId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddress' field.
      * @return The value.
      */
    public java.lang.String getEmailAddress() {
      return emailAddress;
    }


    /**
      * Sets the value of the 'emailAddress' field.
      * @param value The value of 'emailAddress'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setEmailAddress(java.lang.String value) {
      validate(fields()[1], value);
      this.emailAddress = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddress' field has been set.
      * @return True if the 'emailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'emailAddress' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearEmailAddress() {
      emailAddress = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'verificationToken' field.
      * @return The value.
      */
    public java.lang.String getVerificationToken() {
      return verificationToken;
    }


    /**
      * Sets the value of the 'verificationToken' field.
      * @param value The value of 'verificationToken'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setVerificationToken(java.lang.String value) {
      validate(fields()[2], value);
      this.verificationToken = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'verificationToken' field has been set.
      * @return True if the 'verificationToken' field has been set, false otherwise.
      */
    public boolean hasVerificationToken() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'verificationToken' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearVerificationToken() {
      verificationToken = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'verified' field.
      * @return The value.
      */
    public boolean getVerified() {
      return verified;
    }


    /**
      * Sets the value of the 'verified' field.
      * @param value The value of 'verified'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setVerified(boolean value) {
      validate(fields()[3], value);
      this.verified = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'verified' field has been set.
      * @return True if the 'verified' field has been set, false otherwise.
      */
    public boolean hasVerified() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'verified' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearVerified() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sentAt' field.
      * @return The value.
      */
    public java.lang.String getSentAt() {
      return sentAt;
    }


    /**
      * Sets the value of the 'sentAt' field.
      * @param value The value of 'sentAt'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setSentAt(java.lang.String value) {
      validate(fields()[4], value);
      this.sentAt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sentAt' field has been set.
      * @return True if the 'sentAt' field has been set, false otherwise.
      */
    public boolean hasSentAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sentAt' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearSentAt() {
      sentAt = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'verifiedAt' field.
      * @return The value.
      */
    public java.lang.String getVerifiedAt() {
      return verifiedAt;
    }


    /**
      * Sets the value of the 'verifiedAt' field.
      * @param value The value of 'verifiedAt'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setVerifiedAt(java.lang.String value) {
      validate(fields()[5], value);
      this.verifiedAt = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'verifiedAt' field has been set.
      * @return True if the 'verifiedAt' field has been set, false otherwise.
      */
    public boolean hasVerifiedAt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'verifiedAt' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearVerifiedAt() {
      verifiedAt = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'recipient' field.
      * @return The value.
      */
    public java.lang.String getRecipient() {
      return recipient;
    }


    /**
      * Sets the value of the 'recipient' field.
      * @param value The value of 'recipient'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setRecipient(java.lang.String value) {
      validate(fields()[6], value);
      this.recipient = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'recipient' field has been set.
      * @return True if the 'recipient' field has been set, false otherwise.
      */
    public boolean hasRecipient() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'recipient' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearRecipient() {
      recipient = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'msgBody' field.
      * @return The value.
      */
    public java.lang.String getMsgBody() {
      return msgBody;
    }


    /**
      * Sets the value of the 'msgBody' field.
      * @param value The value of 'msgBody'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setMsgBody(java.lang.String value) {
      validate(fields()[7], value);
      this.msgBody = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'msgBody' field has been set.
      * @return True if the 'msgBody' field has been set, false otherwise.
      */
    public boolean hasMsgBody() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'msgBody' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearMsgBody() {
      msgBody = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public java.lang.String getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setSubject(java.lang.String value) {
      validate(fields()[8], value);
      this.subject = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'attachment' field.
      * @return The value.
      */
    public java.lang.String getAttachment() {
      return attachment;
    }


    /**
      * Sets the value of the 'attachment' field.
      * @param value The value of 'attachment'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setAttachment(java.lang.String value) {
      validate(fields()[9], value);
      this.attachment = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'attachment' field has been set.
      * @return True if the 'attachment' field has been set, false otherwise.
      */
    public boolean hasAttachment() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'attachment' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearAttachment() {
      attachment = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'user' field.
      * @return The value.
      */
    public com.v01.techgear_server.generated.UserSchema getUser() {
      return user;
    }


    /**
      * Sets the value of the 'user' field.
      * @param value The value of 'user'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder setUser(com.v01.techgear_server.generated.UserSchema value) {
      validate(fields()[10], value);
      this.userBuilder = null;
      this.user = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'user' field has been set.
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'user' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.v01.techgear_server.generated.UserSchema.Builder getUserBuilder() {
      if (userBuilder == null) {
        if (hasUser()) {
          setUserBuilder(com.v01.techgear_server.generated.UserSchema.newBuilder(user));
        } else {
          setUserBuilder(com.v01.techgear_server.generated.UserSchema.newBuilder());
        }
      }
      return userBuilder;
    }

    /**
     * Sets the Builder instance for the 'user' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.v01.techgear_server.generated.EmailSchema.Builder setUserBuilder(com.v01.techgear_server.generated.UserSchema.Builder value) {
      clearUser();
      userBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'user' field has an active Builder instance
     * @return True if the 'user' field has an active Builder instance
     */
    public boolean hasUserBuilder() {
      return userBuilder != null;
    }

    /**
      * Clears the value of the 'user' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.EmailSchema.Builder clearUser() {
      user = null;
      userBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EmailSchema build() {
      try {
        EmailSchema record = new EmailSchema();
        record.emailId = fieldSetFlags()[0] ? this.emailId : (java.lang.Long) defaultValue(fields()[0]);
        record.emailAddress = fieldSetFlags()[1] ? this.emailAddress : (java.lang.String) defaultValue(fields()[1]);
        record.verificationToken = fieldSetFlags()[2] ? this.verificationToken : (java.lang.String) defaultValue(fields()[2]);
        record.verified = fieldSetFlags()[3] ? this.verified : (java.lang.Boolean) defaultValue(fields()[3]);
        record.sentAt = fieldSetFlags()[4] ? this.sentAt : (java.lang.String) defaultValue(fields()[4]);
        record.verifiedAt = fieldSetFlags()[5] ? this.verifiedAt : (java.lang.String) defaultValue(fields()[5]);
        record.recipient = fieldSetFlags()[6] ? this.recipient : (java.lang.String) defaultValue(fields()[6]);
        record.msgBody = fieldSetFlags()[7] ? this.msgBody : (java.lang.String) defaultValue(fields()[7]);
        record.subject = fieldSetFlags()[8] ? this.subject : (java.lang.String) defaultValue(fields()[8]);
        record.attachment = fieldSetFlags()[9] ? this.attachment : (java.lang.String) defaultValue(fields()[9]);
        if (userBuilder != null) {
          try {
            record.user = this.userBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("user"));
            throw e;
          }
        } else {
          record.user = fieldSetFlags()[10] ? this.user : (com.v01.techgear_server.generated.UserSchema) defaultValue(fields()[10]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EmailSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<EmailSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EmailSchema>
    READER$ = (org.apache.avro.io.DatumReader<EmailSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.emailId);

    out.writeString(this.emailAddress);

    out.writeString(this.verificationToken);

    out.writeBoolean(this.verified);

    if (this.sentAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sentAt);
    }

    if (this.verifiedAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.verifiedAt);
    }

    out.writeString(this.recipient);

    out.writeString(this.msgBody);

    out.writeString(this.subject);

    if (this.attachment == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.attachment);
    }

    this.user.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.emailId = in.readLong();

      this.emailAddress = in.readString();

      this.verificationToken = in.readString();

      this.verified = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.sentAt = null;
      } else {
        this.sentAt = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.verifiedAt = null;
      } else {
        this.verifiedAt = in.readString();
      }

      this.recipient = in.readString();

      this.msgBody = in.readString();

      this.subject = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.attachment = null;
      } else {
        this.attachment = in.readString();
      }

      if (this.user == null) {
        this.user = new com.v01.techgear_server.generated.UserSchema();
      }
      this.user.customDecode(in);

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.emailId = in.readLong();
          break;

        case 1:
          this.emailAddress = in.readString();
          break;

        case 2:
          this.verificationToken = in.readString();
          break;

        case 3:
          this.verified = in.readBoolean();
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sentAt = null;
          } else {
            this.sentAt = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.verifiedAt = null;
          } else {
            this.verifiedAt = in.readString();
          }
          break;

        case 6:
          this.recipient = in.readString();
          break;

        case 7:
          this.msgBody = in.readString();
          break;

        case 8:
          this.subject = in.readString();
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.attachment = null;
          } else {
            this.attachment = in.readString();
          }
          break;

        case 10:
          if (this.user == null) {
            this.user = new com.v01.techgear_server.generated.UserSchema();
          }
          this.user.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










