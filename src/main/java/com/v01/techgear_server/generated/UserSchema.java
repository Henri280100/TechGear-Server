/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.v01.techgear_server.generated;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** User schema is a collection of user information. */
@org.apache.avro.specific.AvroGenerated
public class UserSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7432029206574535545L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserSchema\",\"namespace\":\"com.v01.techgear_server.generated\",\"doc\":\"User schema is a collection of user information.\",\"fields\":[{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"userName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"password\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"phoneNumbers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"addresses\",\"type\":{\"type\":\"record\",\"name\":\"UserAddressSchema\",\"fields\":[{\"name\":\"addressId\",\"type\":\"long\"},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"addressDetails\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"passwordHistory\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"reviews\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"roles\",\"type\":{\"type\":\"record\",\"name\":\"RolesSchema\",\"doc\":\"User roles schema is a collection of user roles.\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"roleType\",\"type\":{\"type\":\"enum\",\"name\":\"Roles\",\"symbols\":[\"USER\",\"ADMIN\"]}}]}},{\"name\":\"emails\",\"type\":{\"type\":\"record\",\"name\":\"EmailSchema\",\"doc\":\"Email schema is a collection of user email address\",\"fields\":[{\"name\":\"emailId\",\"type\":\"long\"},{\"name\":\"emailAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"verificationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"verified\",\"type\":\"boolean\"},{\"name\":\"sentAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"verifiedAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"recipient\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"msgBody\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"subject\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"attachment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"user\",\"type\":\"UserSchema\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserSchema> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserSchema> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserSchema> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserSchema to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserSchema from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserSchema instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long userId;
  private java.lang.String userName;
  private java.lang.String password;
  private java.util.List<java.lang.String> phoneNumbers;
  private boolean active;
  private com.v01.techgear_server.generated.UserAddressSchema addresses;
  private java.util.List<java.lang.String> passwordHistory;
  private java.util.List<java.lang.String> reviews;
  private com.v01.techgear_server.generated.RolesSchema roles;
  private com.v01.techgear_server.generated.EmailSchema emails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserSchema() {}

  /**
   * All-args constructor.
   * @param userId The new value for userId
   * @param userName The new value for userName
   * @param password The new value for password
   * @param phoneNumbers The new value for phoneNumbers
   * @param active The new value for active
   * @param addresses The new value for addresses
   * @param passwordHistory The new value for passwordHistory
   * @param reviews The new value for reviews
   * @param roles The new value for roles
   * @param emails The new value for emails
   */
  public UserSchema(java.lang.Long userId, java.lang.String userName, java.lang.String password, java.util.List<java.lang.String> phoneNumbers, java.lang.Boolean active, com.v01.techgear_server.generated.UserAddressSchema addresses, java.util.List<java.lang.String> passwordHistory, java.util.List<java.lang.String> reviews, com.v01.techgear_server.generated.RolesSchema roles, com.v01.techgear_server.generated.EmailSchema emails) {
    this.userId = userId;
    this.userName = userName;
    this.password = password;
    this.phoneNumbers = phoneNumbers;
    this.active = active;
    this.addresses = addresses;
    this.passwordHistory = passwordHistory;
    this.reviews = reviews;
    this.roles = roles;
    this.emails = emails;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return userName;
    case 2: return password;
    case 3: return phoneNumbers;
    case 4: return active;
    case 5: return addresses;
    case 6: return passwordHistory;
    case 7: return reviews;
    case 8: return roles;
    case 9: return emails;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.Long)value$; break;
    case 1: userName = value$ != null ? value$.toString() : null; break;
    case 2: password = value$ != null ? value$.toString() : null; break;
    case 3: phoneNumbers = (java.util.List<java.lang.String>)value$; break;
    case 4: active = (java.lang.Boolean)value$; break;
    case 5: addresses = (com.v01.techgear_server.generated.UserAddressSchema)value$; break;
    case 6: passwordHistory = (java.util.List<java.lang.String>)value$; break;
    case 7: reviews = (java.util.List<java.lang.String>)value$; break;
    case 8: roles = (com.v01.techgear_server.generated.RolesSchema)value$; break;
    case 9: emails = (com.v01.techgear_server.generated.EmailSchema)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public long getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return The value of the 'userName' field.
   */
  public java.lang.String getUserName() {
    return userName;
  }


  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.String value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'password' field.
   * @return The value of the 'password' field.
   */
  public java.lang.String getPassword() {
    return password;
  }


  /**
   * Sets the value of the 'password' field.
   * @param value the value to set.
   */
  public void setPassword(java.lang.String value) {
    this.password = value;
  }

  /**
   * Gets the value of the 'phoneNumbers' field.
   * @return The value of the 'phoneNumbers' field.
   */
  public java.util.List<java.lang.String> getPhoneNumbers() {
    return phoneNumbers;
  }


  /**
   * Sets the value of the 'phoneNumbers' field.
   * @param value the value to set.
   */
  public void setPhoneNumbers(java.util.List<java.lang.String> value) {
    this.phoneNumbers = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public boolean getActive() {
    return active;
  }


  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'addresses' field.
   * @return The value of the 'addresses' field.
   */
  public com.v01.techgear_server.generated.UserAddressSchema getAddresses() {
    return addresses;
  }


  /**
   * Sets the value of the 'addresses' field.
   * @param value the value to set.
   */
  public void setAddresses(com.v01.techgear_server.generated.UserAddressSchema value) {
    this.addresses = value;
  }

  /**
   * Gets the value of the 'passwordHistory' field.
   * @return The value of the 'passwordHistory' field.
   */
  public java.util.List<java.lang.String> getPasswordHistory() {
    return passwordHistory;
  }


  /**
   * Sets the value of the 'passwordHistory' field.
   * @param value the value to set.
   */
  public void setPasswordHistory(java.util.List<java.lang.String> value) {
    this.passwordHistory = value;
  }

  /**
   * Gets the value of the 'reviews' field.
   * @return The value of the 'reviews' field.
   */
  public java.util.List<java.lang.String> getReviews() {
    return reviews;
  }


  /**
   * Sets the value of the 'reviews' field.
   * @param value the value to set.
   */
  public void setReviews(java.util.List<java.lang.String> value) {
    this.reviews = value;
  }

  /**
   * Gets the value of the 'roles' field.
   * @return The value of the 'roles' field.
   */
  public com.v01.techgear_server.generated.RolesSchema getRoles() {
    return roles;
  }


  /**
   * Sets the value of the 'roles' field.
   * @param value the value to set.
   */
  public void setRoles(com.v01.techgear_server.generated.RolesSchema value) {
    this.roles = value;
  }

  /**
   * Gets the value of the 'emails' field.
   * @return The value of the 'emails' field.
   */
  public com.v01.techgear_server.generated.EmailSchema getEmails() {
    return emails;
  }


  /**
   * Sets the value of the 'emails' field.
   * @param value the value to set.
   */
  public void setEmails(com.v01.techgear_server.generated.EmailSchema value) {
    this.emails = value;
  }

  /**
   * Creates a new UserSchema RecordBuilder.
   * @return A new UserSchema RecordBuilder
   */
  public static com.v01.techgear_server.generated.UserSchema.Builder newBuilder() {
    return new com.v01.techgear_server.generated.UserSchema.Builder();
  }

  /**
   * Creates a new UserSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserSchema RecordBuilder
   */
  public static com.v01.techgear_server.generated.UserSchema.Builder newBuilder(com.v01.techgear_server.generated.UserSchema.Builder other) {
    if (other == null) {
      return new com.v01.techgear_server.generated.UserSchema.Builder();
    } else {
      return new com.v01.techgear_server.generated.UserSchema.Builder(other);
    }
  }

  /**
   * Creates a new UserSchema RecordBuilder by copying an existing UserSchema instance.
   * @param other The existing instance to copy.
   * @return A new UserSchema RecordBuilder
   */
  public static com.v01.techgear_server.generated.UserSchema.Builder newBuilder(com.v01.techgear_server.generated.UserSchema other) {
    if (other == null) {
      return new com.v01.techgear_server.generated.UserSchema.Builder();
    } else {
      return new com.v01.techgear_server.generated.UserSchema.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserSchema instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserSchema>
    implements org.apache.avro.data.RecordBuilder<UserSchema> {

    private long userId;
    private java.lang.String userName;
    private java.lang.String password;
    private java.util.List<java.lang.String> phoneNumbers;
    private boolean active;
    private com.v01.techgear_server.generated.UserAddressSchema addresses;
    private com.v01.techgear_server.generated.UserAddressSchema.Builder addressesBuilder;
    private java.util.List<java.lang.String> passwordHistory;
    private java.util.List<java.lang.String> reviews;
    private com.v01.techgear_server.generated.RolesSchema roles;
    private com.v01.techgear_server.generated.RolesSchema.Builder rolesBuilder;
    private com.v01.techgear_server.generated.EmailSchema emails;
    private com.v01.techgear_server.generated.EmailSchema.Builder emailsBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.v01.techgear_server.generated.UserSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.password)) {
        this.password = data().deepCopy(fields()[2].schema(), other.password);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.phoneNumbers)) {
        this.phoneNumbers = data().deepCopy(fields()[3].schema(), other.phoneNumbers);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.active)) {
        this.active = data().deepCopy(fields()[4].schema(), other.active);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.addresses)) {
        this.addresses = data().deepCopy(fields()[5].schema(), other.addresses);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasAddressesBuilder()) {
        this.addressesBuilder = com.v01.techgear_server.generated.UserAddressSchema.newBuilder(other.getAddressesBuilder());
      }
      if (isValidValue(fields()[6], other.passwordHistory)) {
        this.passwordHistory = data().deepCopy(fields()[6].schema(), other.passwordHistory);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.reviews)) {
        this.reviews = data().deepCopy(fields()[7].schema(), other.reviews);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.roles)) {
        this.roles = data().deepCopy(fields()[8].schema(), other.roles);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasRolesBuilder()) {
        this.rolesBuilder = com.v01.techgear_server.generated.RolesSchema.newBuilder(other.getRolesBuilder());
      }
      if (isValidValue(fields()[9], other.emails)) {
        this.emails = data().deepCopy(fields()[9].schema(), other.emails);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasEmailsBuilder()) {
        this.emailsBuilder = com.v01.techgear_server.generated.EmailSchema.newBuilder(other.getEmailsBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing UserSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.v01.techgear_server.generated.UserSchema other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.password)) {
        this.password = data().deepCopy(fields()[2].schema(), other.password);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.phoneNumbers)) {
        this.phoneNumbers = data().deepCopy(fields()[3].schema(), other.phoneNumbers);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.active)) {
        this.active = data().deepCopy(fields()[4].schema(), other.active);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.addresses)) {
        this.addresses = data().deepCopy(fields()[5].schema(), other.addresses);
        fieldSetFlags()[5] = true;
      }
      this.addressesBuilder = null;
      if (isValidValue(fields()[6], other.passwordHistory)) {
        this.passwordHistory = data().deepCopy(fields()[6].schema(), other.passwordHistory);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.reviews)) {
        this.reviews = data().deepCopy(fields()[7].schema(), other.reviews);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.roles)) {
        this.roles = data().deepCopy(fields()[8].schema(), other.roles);
        fieldSetFlags()[8] = true;
      }
      this.rolesBuilder = null;
      if (isValidValue(fields()[9], other.emails)) {
        this.emails = data().deepCopy(fields()[9].schema(), other.emails);
        fieldSetFlags()[9] = true;
      }
      this.emailsBuilder = null;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setUserId(long value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearUserId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * @return The value.
      */
    public java.lang.String getUserName() {
      return userName;
    }


    /**
      * Sets the value of the 'userName' field.
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setUserName(java.lang.String value) {
      validate(fields()[1], value);
      this.userName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userName' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'password' field.
      * @return The value.
      */
    public java.lang.String getPassword() {
      return password;
    }


    /**
      * Sets the value of the 'password' field.
      * @param value The value of 'password'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setPassword(java.lang.String value) {
      validate(fields()[2], value);
      this.password = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'password' field has been set.
      * @return True if the 'password' field has been set, false otherwise.
      */
    public boolean hasPassword() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'password' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearPassword() {
      password = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumbers' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getPhoneNumbers() {
      return phoneNumbers;
    }


    /**
      * Sets the value of the 'phoneNumbers' field.
      * @param value The value of 'phoneNumbers'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setPhoneNumbers(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.phoneNumbers = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumbers' field has been set.
      * @return True if the 'phoneNumbers' field has been set, false otherwise.
      */
    public boolean hasPhoneNumbers() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'phoneNumbers' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearPhoneNumbers() {
      phoneNumbers = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setActive(boolean value) {
      validate(fields()[4], value);
      this.active = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearActive() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'addresses' field.
      * @return The value.
      */
    public com.v01.techgear_server.generated.UserAddressSchema getAddresses() {
      return addresses;
    }


    /**
      * Sets the value of the 'addresses' field.
      * @param value The value of 'addresses'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setAddresses(com.v01.techgear_server.generated.UserAddressSchema value) {
      validate(fields()[5], value);
      this.addressesBuilder = null;
      this.addresses = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'addresses' field has been set.
      * @return True if the 'addresses' field has been set, false otherwise.
      */
    public boolean hasAddresses() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'addresses' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.v01.techgear_server.generated.UserAddressSchema.Builder getAddressesBuilder() {
      if (addressesBuilder == null) {
        if (hasAddresses()) {
          setAddressesBuilder(com.v01.techgear_server.generated.UserAddressSchema.newBuilder(addresses));
        } else {
          setAddressesBuilder(com.v01.techgear_server.generated.UserAddressSchema.newBuilder());
        }
      }
      return addressesBuilder;
    }

    /**
     * Sets the Builder instance for the 'addresses' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.v01.techgear_server.generated.UserSchema.Builder setAddressesBuilder(com.v01.techgear_server.generated.UserAddressSchema.Builder value) {
      clearAddresses();
      addressesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'addresses' field has an active Builder instance
     * @return True if the 'addresses' field has an active Builder instance
     */
    public boolean hasAddressesBuilder() {
      return addressesBuilder != null;
    }

    /**
      * Clears the value of the 'addresses' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearAddresses() {
      addresses = null;
      addressesBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'passwordHistory' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getPasswordHistory() {
      return passwordHistory;
    }


    /**
      * Sets the value of the 'passwordHistory' field.
      * @param value The value of 'passwordHistory'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setPasswordHistory(java.util.List<java.lang.String> value) {
      validate(fields()[6], value);
      this.passwordHistory = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'passwordHistory' field has been set.
      * @return True if the 'passwordHistory' field has been set, false otherwise.
      */
    public boolean hasPasswordHistory() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'passwordHistory' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearPasswordHistory() {
      passwordHistory = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'reviews' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getReviews() {
      return reviews;
    }


    /**
      * Sets the value of the 'reviews' field.
      * @param value The value of 'reviews'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setReviews(java.util.List<java.lang.String> value) {
      validate(fields()[7], value);
      this.reviews = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'reviews' field has been set.
      * @return True if the 'reviews' field has been set, false otherwise.
      */
    public boolean hasReviews() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'reviews' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearReviews() {
      reviews = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'roles' field.
      * @return The value.
      */
    public com.v01.techgear_server.generated.RolesSchema getRoles() {
      return roles;
    }


    /**
      * Sets the value of the 'roles' field.
      * @param value The value of 'roles'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setRoles(com.v01.techgear_server.generated.RolesSchema value) {
      validate(fields()[8], value);
      this.rolesBuilder = null;
      this.roles = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'roles' field has been set.
      * @return True if the 'roles' field has been set, false otherwise.
      */
    public boolean hasRoles() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'roles' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.v01.techgear_server.generated.RolesSchema.Builder getRolesBuilder() {
      if (rolesBuilder == null) {
        if (hasRoles()) {
          setRolesBuilder(com.v01.techgear_server.generated.RolesSchema.newBuilder(roles));
        } else {
          setRolesBuilder(com.v01.techgear_server.generated.RolesSchema.newBuilder());
        }
      }
      return rolesBuilder;
    }

    /**
     * Sets the Builder instance for the 'roles' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.v01.techgear_server.generated.UserSchema.Builder setRolesBuilder(com.v01.techgear_server.generated.RolesSchema.Builder value) {
      clearRoles();
      rolesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'roles' field has an active Builder instance
     * @return True if the 'roles' field has an active Builder instance
     */
    public boolean hasRolesBuilder() {
      return rolesBuilder != null;
    }

    /**
      * Clears the value of the 'roles' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearRoles() {
      roles = null;
      rolesBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'emails' field.
      * @return The value.
      */
    public com.v01.techgear_server.generated.EmailSchema getEmails() {
      return emails;
    }


    /**
      * Sets the value of the 'emails' field.
      * @param value The value of 'emails'.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder setEmails(com.v01.techgear_server.generated.EmailSchema value) {
      validate(fields()[9], value);
      this.emailsBuilder = null;
      this.emails = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'emails' field has been set.
      * @return True if the 'emails' field has been set, false otherwise.
      */
    public boolean hasEmails() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'emails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.v01.techgear_server.generated.EmailSchema.Builder getEmailsBuilder() {
      if (emailsBuilder == null) {
        if (hasEmails()) {
          setEmailsBuilder(com.v01.techgear_server.generated.EmailSchema.newBuilder(emails));
        } else {
          setEmailsBuilder(com.v01.techgear_server.generated.EmailSchema.newBuilder());
        }
      }
      return emailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'emails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.v01.techgear_server.generated.UserSchema.Builder setEmailsBuilder(com.v01.techgear_server.generated.EmailSchema.Builder value) {
      clearEmails();
      emailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'emails' field has an active Builder instance
     * @return True if the 'emails' field has an active Builder instance
     */
    public boolean hasEmailsBuilder() {
      return emailsBuilder != null;
    }

    /**
      * Clears the value of the 'emails' field.
      * @return This builder.
      */
    public com.v01.techgear_server.generated.UserSchema.Builder clearEmails() {
      emails = null;
      emailsBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserSchema build() {
      try {
        UserSchema record = new UserSchema();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.Long) defaultValue(fields()[0]);
        record.userName = fieldSetFlags()[1] ? this.userName : (java.lang.String) defaultValue(fields()[1]);
        record.password = fieldSetFlags()[2] ? this.password : (java.lang.String) defaultValue(fields()[2]);
        record.phoneNumbers = fieldSetFlags()[3] ? this.phoneNumbers : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.active = fieldSetFlags()[4] ? this.active : (java.lang.Boolean) defaultValue(fields()[4]);
        if (addressesBuilder != null) {
          try {
            record.addresses = this.addressesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("addresses"));
            throw e;
          }
        } else {
          record.addresses = fieldSetFlags()[5] ? this.addresses : (com.v01.techgear_server.generated.UserAddressSchema) defaultValue(fields()[5]);
        }
        record.passwordHistory = fieldSetFlags()[6] ? this.passwordHistory : (java.util.List<java.lang.String>) defaultValue(fields()[6]);
        record.reviews = fieldSetFlags()[7] ? this.reviews : (java.util.List<java.lang.String>) defaultValue(fields()[7]);
        if (rolesBuilder != null) {
          try {
            record.roles = this.rolesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("roles"));
            throw e;
          }
        } else {
          record.roles = fieldSetFlags()[8] ? this.roles : (com.v01.techgear_server.generated.RolesSchema) defaultValue(fields()[8]);
        }
        if (emailsBuilder != null) {
          try {
            record.emails = this.emailsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("emails"));
            throw e;
          }
        } else {
          record.emails = fieldSetFlags()[9] ? this.emails : (com.v01.techgear_server.generated.EmailSchema) defaultValue(fields()[9]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserSchema>
    READER$ = (org.apache.avro.io.DatumReader<UserSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.userId);

    out.writeString(this.userName);

    out.writeString(this.password);

    long size0 = this.phoneNumbers.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.String e0: this.phoneNumbers) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeBoolean(this.active);

    this.addresses.customEncode(out);

    long size1 = this.passwordHistory.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.String e1: this.passwordHistory) {
      actualSize1++;
      out.startItem();
      out.writeString(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.reviews.size();
    out.writeArrayStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (java.lang.String e2: this.reviews) {
      actualSize2++;
      out.startItem();
      out.writeString(e2);
    }
    out.writeArrayEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    this.roles.customEncode(out);

    this.emails.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.userId = in.readLong();

      this.userName = in.readString();

      this.password = in.readString();

      long size0 = in.readArrayStart();
      java.util.List<java.lang.String> a0 = this.phoneNumbers;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.String>((int)size0, SCHEMA$.getField("phoneNumbers").schema());
        this.phoneNumbers = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.String> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.String e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString();
          a0.add(e0);
        }
      }

      this.active = in.readBoolean();

      if (this.addresses == null) {
        this.addresses = new com.v01.techgear_server.generated.UserAddressSchema();
      }
      this.addresses.customDecode(in);

      long size1 = in.readArrayStart();
      java.util.List<java.lang.String> a1 = this.passwordHistory;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.String>((int)size1, SCHEMA$.getField("passwordHistory").schema());
        this.passwordHistory = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.String> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.String e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readString();
          a1.add(e1);
        }
      }

      long size2 = in.readArrayStart();
      java.util.List<java.lang.String> a2 = this.reviews;
      if (a2 == null) {
        a2 = new SpecificData.Array<java.lang.String>((int)size2, SCHEMA$.getField("reviews").schema());
        this.reviews = a2;
      } else a2.clear();
      SpecificData.Array<java.lang.String> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a2 : null);
      for ( ; 0 < size2; size2 = in.arrayNext()) {
        for ( ; size2 != 0; size2--) {
          java.lang.String e2 = (ga2 != null ? ga2.peek() : null);
          e2 = in.readString();
          a2.add(e2);
        }
      }

      if (this.roles == null) {
        this.roles = new com.v01.techgear_server.generated.RolesSchema();
      }
      this.roles.customDecode(in);

      if (this.emails == null) {
        this.emails = new com.v01.techgear_server.generated.EmailSchema();
      }
      this.emails.customDecode(in);

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.userId = in.readLong();
          break;

        case 1:
          this.userName = in.readString();
          break;

        case 2:
          this.password = in.readString();
          break;

        case 3:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.String> a0 = this.phoneNumbers;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.String>((int)size0, SCHEMA$.getField("phoneNumbers").schema());
            this.phoneNumbers = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.String> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.String e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString();
              a0.add(e0);
            }
          }
          break;

        case 4:
          this.active = in.readBoolean();
          break;

        case 5:
          if (this.addresses == null) {
            this.addresses = new com.v01.techgear_server.generated.UserAddressSchema();
          }
          this.addresses.customDecode(in);
          break;

        case 6:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.String> a1 = this.passwordHistory;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.String>((int)size1, SCHEMA$.getField("passwordHistory").schema());
            this.passwordHistory = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.String> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.String e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readString();
              a1.add(e1);
            }
          }
          break;

        case 7:
          long size2 = in.readArrayStart();
          java.util.List<java.lang.String> a2 = this.reviews;
          if (a2 == null) {
            a2 = new SpecificData.Array<java.lang.String>((int)size2, SCHEMA$.getField("reviews").schema());
            this.reviews = a2;
          } else a2.clear();
          SpecificData.Array<java.lang.String> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a2 : null);
          for ( ; 0 < size2; size2 = in.arrayNext()) {
            for ( ; size2 != 0; size2--) {
              java.lang.String e2 = (ga2 != null ? ga2.peek() : null);
              e2 = in.readString();
              a2.add(e2);
            }
          }
          break;

        case 8:
          if (this.roles == null) {
            this.roles = new com.v01.techgear_server.generated.RolesSchema();
          }
          this.roles.customDecode(in);
          break;

        case 9:
          if (this.emails == null) {
            this.emails = new com.v01.techgear_server.generated.EmailSchema();
          }
          this.emails.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










